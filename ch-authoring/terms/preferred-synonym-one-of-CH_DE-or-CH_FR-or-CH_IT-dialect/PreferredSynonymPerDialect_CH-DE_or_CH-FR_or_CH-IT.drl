import org.ihtsdo.drools.domain.Concept
import org.ihtsdo.drools.domain.Description
import org.ihtsdo.drools.domain.Constants
import java.util.Collection
import java.util.ArrayList
import java.util.List
import java.util.Map
import org.ihtsdo.drools.helper.DescriptionHelper
import org.ihtsdo.drools.response.InvalidContent
import org.ihtsdo.drools.response.Severity
import java.util.Collection

global java.util.List invalidContent

rule "Preferred synonym in CH_DE or CH_FR or CH_IT dialect"
	dialect "mvel"
	when
		c : Concept(active)
		ArrayList(size > 0 || c.moduleId == "2011000195101") from collect (
			Description(active, conceptId == c.id, typeId == Constants.SYNONYM, languageCode == "de")
		)
		ArrayList(size == 0) from collect (
			Description(active, conceptId == c.id, typeId == Constants.SYNONYM, languageCode == "de", acceptabilityMap["2041000195100"] == Constants.ACCEPTABILITY_PREFERRED)
		)
		ArrayList(size > 0 || c.moduleId == "2011000195101") from collect (
				Description(active, conceptId == c.id, typeId == Constants.SYNONYM, languageCode == "fr")
		)
		ArrayList(size == 0) from collect (
				Description(active, conceptId == c.id, typeId == Constants.SYNONYM, languageCode == "fr", acceptabilityMap["2021000195106"] == Constants.ACCEPTABILITY_PREFERRED)
		)
		ArrayList(size > 0 || c.moduleId == "2011000195101") from collect (
				Description(active, conceptId == c.id, typeId == Constants.SYNONYM, languageCode == "it")
		)
		ArrayList(size == 0) from collect (
				Description(active, conceptId == c.id, typeId == Constants.SYNONYM, languageCode == "it", acceptabilityMap["2031000195108"] == Constants.ACCEPTABILITY_PREFERRED)
		)
	then
		InvalidContent invalid = new InvalidContent("1454c148-4596-4218-873a-1d05d859cc5b",
				c, "A concept must have one Preferred Synonym in either the CH-DE or CH-FR or CH-IT dialects.");
		invalid.ignorePublishedCheck();
		invalidContent.add(invalid);
end

function List<String> getDialects(Collection descriptions) {
		List<String> list = new ArrayList<String>();
		for (Object obj : descriptions) {
			Description description = (Description) obj;
			Map<String, String> acceptabilityMap =	description.getAcceptabilityMap();
			for (String key : acceptabilityMap.keySet()) {
				if (!list.contains(key)) {
					list.add(key);
				}
			}				
		}
		return list;
}

rule "Not provide enough for all 3 dialects in CH extension"
	dialect "mvel"
	when
		c : Concept(active)
		d: ArrayList(size > 0) from collect (
			Description(active, conceptId == c.id, typeId == Constants.SYNONYM, moduleId == "2011000195101",
				(acceptabilityMap["2041000195100"] == Constants.ACCEPTABILITY_PREFERRED || acceptabilityMap["2041000195100"] == Constants.ACCEPTABILITY_ACCEPTABLE ||
				 acceptabilityMap["2021000195106"] == Constants.ACCEPTABILITY_PREFERRED || acceptabilityMap["2021000195106"] == Constants.ACCEPTABILITY_ACCEPTABLE ||
				 acceptabilityMap["2031000195108"] == Constants.ACCEPTABILITY_PREFERRED || acceptabilityMap["2031000195108"] == Constants.ACCEPTABILITY_ACCEPTABLE))
		)
		eval(getDialects(d).size() < 3)
	then
		InvalidContent invalid = new InvalidContent((c.moduleId != "2011000195101" ? "29699b62-d288-4deb-b403-6f24e186a10c" : "f80e743f-18bb-4a4b-93a1-096d9cbaa0e5"),
				c, (c.moduleId != "2011000195101" ? "A translated concept should have all 3 Preferred Synonyms in CH-DE, CH-FR and CH-IT." : "A new CH concept should have all 3 Preferred Synonyms in CH-DE, CH-FR and CH-IT."), Severity.WARNING);
		invalid.ignorePublishedCheck();
		invalidContent.add(invalid);
end
