import org.ihtsdo.drools.domain.Concept
import org.ihtsdo.drools.domain.Constants
import org.ihtsdo.drools.response.InvalidContent
import org.ihtsdo.drools.helper.ConceptHelper
import org.ihtsdo.drools.response.Severity
import org.ihtsdo.drools.service.ConceptService
import java.util.Collection
import java.util.ArrayList
import java.util.List

global java.util.List invalidContent
global ConceptService conceptService

function List<String> intersect(Collection list1, Collection list2) {
	List<String> list = new ArrayList<String>();
	
	for (Object obj : list1) {
		String item = (String) obj;
		if (list2.contains(item)) {
			list.add(item);
		}
	}
	return list;
}

rule "Active concept has top level parents that are both (product) and (physical object)."
	dialect "mvel"
	when
		c : Concept(active)
		topLevelHierarchies : ArrayList() from collect( String() from conceptService.findTopLevelHierarchiesOfConcept(c))
        eval(ConceptHelper.containsAnyConcept(topLevelHierarchies,"373873005","260787004"))
		conceptsBelongToProductAndPhysicalObject :  ArrayList() from collect( String() from conceptService.findConceptsHavingMultipleTopHierarchies("373873005","260787004"))
		parents :  ArrayList() from collect( String() from conceptService.findStatedAncestorsOfConcept(c))
		eval(intersect(conceptsBelongToProductAndPhysicalObject, parents).isEmpty())
	then
		InvalidContent invalid = new InvalidContent(c, "Active concept has parents that are both (product) and (physical object).", Severity.WARNING)
		invalid.ignorePublishedCheck()
		invalidContent.add(invalid);
end