import org.ihtsdo.drools.domain.Concept
import org.ihtsdo.drools.domain.Description
import org.ihtsdo.drools.domain.Constants
import org.ihtsdo.drools.response.InvalidContent
import org.ihtsdo.drools.helper.DescriptionHelper
import org.ihtsdo.drools.domain.Constants
import org.ihtsdo.drools.response.Severity
import java.text.Normalizer;

global java.util.List invalidContent

function String stripAccents(String term) {
	String str = term;
	str = Normalizer.normalize(str, Normalizer.Form.NFD);
	str = str.replaceAll("\\p{M}", "");
	return str;
}

rule "An active term on an active concept with case significance 'only initial character case insensitive' should contain a capital letter after the first character."
	dialect "mvel"
	when
		c : Concept(active == true)
		d1 : Description(conceptId == c.id && active && typeId == Constants.FSN && DescriptionHelper.getTag(term) != "substance")
		d2 : Description(active == true && conceptId == c.id && caseSignificanceId == Constants.ONLY_INITIAL_CHARACTER_CASE_INSENSITIVE
						&& stripAccents(term) not matches "^..*[A-Z].*$" && stripAccents(term) not matches "^..*[0-9]$" && stripAccents(term) not matches "^..*[0-9][A-Za-z].*$" && stripAccents(term) not matches "^[<, %, >, . , &, ^, /].*$")		
	then
		invalidContent.add(new InvalidContent("4ee9cfeb-3ce5-48bf-b238-de7498fde042",
				d2, "An active term on an active concept with case significance 'only initial character case insensitive' should contain " +
				"a capital letter after the first character.", Severity.WARNING));
end

rule "An active term on an active concept with case significance 'entire term case insensitive' should not contain capital letters after the first character."
	dialect "mvel"
	when
		c : Concept(active == true)
		d : Description(active == true && conceptId == c.id && caseSignificanceId == Constants.ENTIRE_TERM_CASE_INSENSITIVE && term matches "^..*[A-Z].*$")
	then
		invalidContent.add(new InvalidContent("900bbad3-5ebf-47ff-8206-01ff57c8f975",
				d, "An active term on an active concept with case significance 'entire term case insensitive' should not contain " +
				"capital letters after the first character.", Severity.WARNING));
end

rule "Terms containing a capital letter are expected to be marked cI or CS.
	dialect "mvel"
	when
		c : Concept(active == true)
		d : Description(active == true && conceptId == c.id && caseSignificanceId == Constants.ENTIRE_TERM_CASE_INSENSITIVE && term matches "^..*[A-Z].*$")
	then
		invalidContent.add(new InvalidContent("aa0b2de4-5b51-4594-980c-3ef46b7b4ade",
				d, "Terms containing a capital letter are expected to be marked cI or CS.", Severity.WARNING));
end
